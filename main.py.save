from tools import nmap_scanner
from modules import scanner, bruteforce_ssh, analyzer
import modules.bot as bot_mod
import tools.nmap_scanner as nmap_tool
import modules.analyzer as analyzer_mod
import modules.bruteforce_ssh as bf_ssh
import modules.scanner as scanner
import modules.osint as osint
from modules import auth  # üí° Giri≈ü kontrol√º
import modules.exploiter as exploiter  # ‚úÖ Yeni eklenen exploit mod√ºl√º
import modules.auto_scan as auto_scan  # <-- Buraya ekledik

def main():
    if not auth.login():
        exit()

    analyzer = analyzer_mod.Analyzer()

    print("=== CyberAlbertou Siber G√ºvenlik Asistanƒ± ===")
    while True:
        print("\n1. OSINT Bilgi Topla")
        print("2. Zafiyet Taramasƒ± (SQLi, XSS, LFI)")
        print("3. Bruteforce Ataƒüƒ± (SSH, FTP, HTTP)")
        print("4. Nmap Port & Servis Taramasƒ±")
        print("5. Aƒü Haritalama & Cihaz Ke≈üfi")
        print("7. Raporlama")
        print("8. Bot Y√∂netimi (Arka Kapƒ±, Komut Kontrol)")
        print("9. √áƒ±kƒ±≈ü")
        print("10. Otomatik Exploit Tespiti (Searchsploit ile)")
        print("11. Otomatik Tetikleme (URL, IP ve SSH Brute Force)")  # <-- Yeni men√º se√ßeneƒüi
	print("12. T√ºm√ºn√º Otomatik Tara (Giri≈ü Gerektirmez, Varsayƒ±lan dosyalar)")


        choice = input("Se√ßiminiz: ").strip()

        if choice == "1":
            osint.basic_osint_menu()

        elif choice == "2":
            url = input("Test edilecek URL (parametreli): ").strip()
            if '?' not in url:
                print("[-] L√ºtfen parametreli bir URL giriniz! √ñrnek: https://site.com/page.php?id=1")
                continue
            resp = scanner.scan(url)
            if resp:
                analyzer.analyze_sql_response(resp)
                analyzer.show_recommendations()
            else:
                print("[-] Tarama sonu√ßsuz kaldƒ±.")

        elif choice == "3":
            target = input("Hedef IP adresi: ").strip()
            bf_ssh.start_bruteforce(target)

        elif choice == "4":
            ip = input("Tarama yapƒ±lacak IP: ").strip()
            open_ports = nmap_tool.run_scan(ip)
            if open_ports:
                analyzer.analyze_ports(open_ports)
                analyzer.show_recommendations()
            else:
                print("[-] A√ßƒ±k port bulunamadƒ± veya hedef eri≈üilemiyor.")

        elif choice == "5":
            print("[*] Aƒü Haritalama mod√ºl√º yakƒ±nda eklenecek.")

        elif choice == "6":
            print("[*] DDoS sim√ºlasyonu mod√ºl√º yakƒ±nda eklenecek.")

        elif choice == "7":
            print("[*] Raporlama mod√ºl√º yakƒ±nda eklenecek.")

        elif choice == "8":
            bot_mod.bot_management()

        elif choice == "9":
            print("√áƒ±kƒ±≈ü yapƒ±lƒ±yor, g√∂r√º≈ü√ºr√ºz!")
            break

        elif choice == "10":
            target = input("Hedef IP veya domain girin: ").strip()
            exploiter.run(target)

        elif choice == "11":  # <-- Yeni otomatik tetikleme se√ßeneƒüi
            url_file = input("Test edilecek URL listesi dosyasƒ± (parametreli URL'ler): ").strip()
            ip_file = input("Nmap taramasƒ± i√ßin IP listesi dosyasƒ±: ").strip()
            ssh_file = input("SSH brute force hedef IP listesi dosyasƒ±: ").strip()

            try:
                with open(url_file, "r") as uf:
                    urls = [u.strip() for u in uf.readlines() if u.strip()]
                with open(ip_file, "r") as ipf:
                    ips = [i.strip() for i in ipf.readlines() if i.strip()]
                with open(ssh_file, "r") as sf:
                    ssh_targets = [s.strip() for s in sf.readlines() if s.strip()]
            except Exception as e:
                print(f"Dosya okuma hatasƒ±: {e}")
                continue

            auto_scan.auto_scan(urls, ips, ssh_targets)

        else:
            print("Ge√ßersiz se√ßim, tekrar deneyin.")

if __name__ == "__main__":
    main()
